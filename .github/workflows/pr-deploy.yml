name: PR Deploy (No Auto-Testing)

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  pull-requests: write
  contents: read

jobs:
  deploy-pr:
    runs-on: ubuntu-latest
    name: Deploy PR Preview

    steps:
      - name: Check deployment configuration
        run: |
          echo "üîß Checking deployment configuration..."

          MISSING_CONFIG=()

          # Check required secrets
          [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ] && MISSING_CONFIG+=("AWS_ACCESS_KEY_ID (secret)")
          [ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ] && MISSING_CONFIG+=("AWS_SECRET_ACCESS_KEY (secret)")

          # Check required variables
          [ -z "${{ vars.AWS_REGION }}" ] && MISSING_CONFIG+=("AWS_REGION (variable)")
          [ -z "${{ vars.S3_BUCKET_NAME }}" ] && MISSING_CONFIG+=("S3_BUCKET_NAME (variable)")
          [ -z "${{ vars.CLOUDFRONT_DISTRIBUTION_ID }}" ] && MISSING_CONFIG+=("CLOUDFRONT_DISTRIBUTION_ID (variable)")
          [ -z "${{ vars.DOMAIN }}" ] && MISSING_CONFIG+=("DOMAIN (variable)")

          if [ ${#MISSING_CONFIG[@]} -gt 0 ]; then
            echo "‚ùå Missing required configuration:"
            printf "   ‚Ä¢ %s\n" "${MISSING_CONFIG[@]}"
            echo ""
            echo "üìù This is a template repository. To configure deployment:"
            echo "   1. Go to Settings > Secrets and variables > Actions"
            echo "   2. Add the missing secrets and variables listed above"
            echo "   3. See docs/GITHUB-SETUP.md for detailed instructions"
            exit 1
          fi

          echo "‚úÖ All required configuration found, proceeding with deployment..."

      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'  # Will be customized during setup

      - name: Install dependencies
        run: npm install

      - name: Build the app
        run: ${{ vars.BUILD_COMMAND || 'npm run build' }}

      - name: Run image optimization (if available)
        run: |
          if npm run | grep -q "optimize-images"; then
            echo "Running image optimization..."
            npm run optimize-images
          else
            echo "No image optimization script found, skipping..."
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Deploy PR to S3 and invalidate CloudFront
        run: |
          PR_FOLDER_NAME="pr-${{ github.event.pull_request.number }}"
          BUILD_DIR="${{ vars.BUILD_DIR || './build' }}"

          echo "Deploying to S3..."
          echo "Source: ${BUILD_DIR}"
          echo "Destination: s3://${{ vars.S3_BUCKET_NAME }}/${PR_FOLDER_NAME}/"

          aws s3 sync ${BUILD_DIR} s3://${{ vars.S3_BUCKET_NAME }}/${PR_FOLDER_NAME} --delete

          echo "Starting CloudFront invalidation..."
          aws cloudfront create-invalidation \
            --distribution-id ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/${PR_FOLDER_NAME}/*"

      - name: Comment on PR with preview URL
        uses: actions/github-script@v6
        with:
          github-token: ${{ github.token }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üöÄ **PR Preview Deployed:** https://pr-${{ github.event.pull_request.number }}.${{ vars.DOMAIN }}\n\nüí° **To run E2E tests:** Comment "please test" on this PR\n\n‚è≥ CloudFront cache may take 5-15 minutes to update\n\nüìä **Deployment Details:**\n- PR: #${{ github.event.pull_request.number }}\n- Branch: \`${{ github.event.pull_request.head.ref }}\`\n- Commit: \`${{ github.event.pull_request.head.sha }}\``
            })
